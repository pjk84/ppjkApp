version: "3.8"

services:
  nextjs:
    container_name: nextjs
    build: ./nextjs
    restart: always
    expose:
      - 3000
    env_file:
      - ./nextjs/.env.prod
  flaskapp:
    build:
      context: ./flaskapp
      dockerfile: dockerfile.prod
    container_name: flask
    command: gunicorn --bind 0.0.0.0:5000 wsgi:my_app
    expose:
      - 5000
    env_file:
      - ./flaskapp/build/.env.prod
    depends_on:
      - db
  dotnet:
    build:
      context: ./cs
      dockerfile: dockerfile.prod
    container_name: dotnet
    expose:
      - 5002
    env_file:
      - ./cs/Api/.env
    depends_on:
      - db

  nginx:
    container_name: nginx
    build: ./nginx
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - flaskapp
      - dotnet

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

  db:
    container_name: postgres
    image: postgres:13-alpine
    volumes:
      - ppjkdb_prod:/var/lib/postgresql/data/
    env_file:
      - ./flaskapp/db/.env
    ports:
      - "5432:5432"

volumes:
  ppjkdb_prod:
  static_volume:
